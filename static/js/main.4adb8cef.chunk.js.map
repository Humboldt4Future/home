{"version":3,"sources":["images/h4f.png","styles.js","App.js","reportWebVitals.js","index.js"],"names":["makeStyles","appBar","borderRadius","margin","display","flexDirection","justifyContent","alignItems","heading","color","image","marginLeft","mainContainer","note","link","underline","button","marginTop","text","padding","App","classes","useStyles","Container","maxwidth","AppBar","className","position","Typography","variant","align","src","logo","alt","height","Grid","container","justify","spacing","item","Paper","Link","href","Button","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAe,MAA0B,gC,QCE1BA,eAAW,iBAAO,CAC7BC,OAAQ,CACJC,aAAc,GACdC,OAAQ,SACRC,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,WAAY,UAEhBC,QAAS,CACLC,MAAO,qBAEXC,MAAO,CACHC,WAAY,QAEhBC,cAAe,CACXP,cAAe,kBAEnBQ,KAAM,CACFX,aAAc,IAElBY,KAAM,CACFC,UAAW,QAEfC,OAAQ,CACJC,UAAW,OAEfC,KAAM,CACFC,QAAS,Y,OC0BFC,MApDf,WACE,IAAMC,EAAUC,IAEhB,OACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,eAACC,EAAA,EAAD,CAAQC,UAAWL,EAAQpB,OAAQ0B,SAAS,SAASlB,MAAM,UAA3D,UACE,cAACmB,EAAA,EAAD,CAAYF,UAAWL,EAAQb,QAASqB,QAAQ,KAAKC,MAAM,SAA3D,6BAGA,qBAAKJ,UAAWL,EAAQX,MAAOqB,IAAKC,EAAMC,IAAI,OAAOC,OAAO,UAE9D,cAACX,EAAA,EAAD,UACE,eAACY,EAAA,EAAD,CAAMT,UAAWL,EAAQT,cAAewB,WAAS,EAACC,QAAQ,gBAAgB9B,WAAW,UAAU+B,QAAS,EAAxG,UACE,cAACH,EAAA,EAAD,CAAMT,UAAWL,EAAQR,KAAM0B,MAAI,EAAnC,SACE,cAACC,EAAA,EAAD,UACE,eAACZ,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAA/B,UACE,cAACW,EAAA,EAAD,CAAMf,UAAWL,EAAQP,KAAM4B,KAAK,yCAApC,SACE,cAACC,EAAA,EAAD,CAAQjB,UAAWL,EAAQL,OAAQa,QAAQ,YAAYpB,MAAM,UAAUmC,KAAK,QAA5E,6CAIF,uBANF,oDAWJ,cAACT,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,UACE,eAACZ,EAAA,EAAD,CAAYF,UAAWL,EAAQH,KAAMW,QAAQ,KAA7C,2LAGW,uBAHX,gdAQ0D,uBAR1D,sRAYyB,uBAZzB,gNCpBCgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4adb8cef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/h4f.33f8b1ab.png\";","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles(() => ({\r\n    appBar: {\r\n        borderRadius: 15,\r\n        margin: '30px 0',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    heading: {\r\n        color: 'rgba(0,118,55,99)',\r\n    },\r\n    image: {\r\n        marginLeft: '15px',\r\n    },\r\n    mainContainer: {\r\n        flexDirection: \"column-reverse\",\r\n    },\r\n    note: {\r\n        borderRadius: 15,\r\n    },\r\n    link: {\r\n        underline: 'none',\r\n    },\r\n    button: {\r\n        marginTop: '5px',\r\n    },\r\n    text: {\r\n        padding: '20px'\r\n    }\r\n}));","import { Container, AppBar, Typography, Button, Grid, Paper, Link } from '@material-ui/core';\nimport logo from './images/h4f.png';\nimport useStyles from './styles.js';\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <Container maxwidth=\"lg\">\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\">\n          Humboldt4Future\n        </Typography>\n        <img className={classes.image} src={logo} alt=\"logo\" height=\"60\"/>\n      </AppBar>\n      <Container>\n        <Grid className={classes.mainContainer} container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\n          <Grid className={classes.note} item>\n            <Paper>\n              <Typography variant=\"h5\" align=\"center\">\n                <Link className={classes.link} href=\"https://humboldt4future.github.io/tool\">\n                  <Button className={classes.button} variant=\"contained\" color=\"primary\" size=\"large\">\n                    Click here to get to the tool\n                  </Button>\n                </Link>\n                <br/>\n                Note: Currently the tool is not functional\n              </Typography>\n            </Paper>\n          </Grid>\n          <Grid item>\n            <Paper>\n              <Typography className={classes.text} variant=\"h5\">\n                Humboldt4Future ist ein Projekt dessen Ziel es ist auf den Klimawandel aufmerksam\n                zu machen und einfach umzusetzende Tipps zu einer umweltfreundlicheren Lebensweise\n                zu geben.<br/> Das Projekt besteht aus einer Gruppe von 13 Schüler/-innen, der elften\n                Jahrgangsstufe, des Humboldt-Gymnasiums aus Vaterstetten, die im Rahmen des\n                Unterrichts eine Applikation entwickeln, um den Ökologischen Fußabdruck ihrer\n                Mitschüler/-innen zu errechnen. Spätestens im Februar 2022 soll eine Umfrage an\n                die Schule gebracht werden, in den darauffolgenden Monaten werden die Ergebnisse\n                dann ausgewertet und voraussichtlich im Mai präsentiert.<br/> Das Ziel ist es mit\n                leicht verständlichen Fragen und einem direkten Feedback nach der Beantwortung\n                der Umfrage ein Bewusstsein für Umwelt und Klimaschutz zu schaffen. Teil des\n                Feedbacks werden umweltfreundlichere Alternativen zum Lebensstil der\n                Teilnehmer/-innen sein.<br/> Nach der Auswertung der Umfrage werden wir die\n                Ergebnisse datenschutzgerecht veröffentlichen und je nach Erfolg wird \n                geplant die Umfrage auch anderen Schulen zu Verfügung zu stellen.\n              </Typography>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}